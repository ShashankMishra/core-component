plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "java"
    id "application"
}

task deploy(dependsOn: [shadowJar], type: Exec) {
    description "Deploys code to AWS"
    commandLine "bash", "-c", "npx serverless deploy -v"

}


task destroy(type: Exec) {
    description "Destroys resources in AWS"
    commandLine "bash", "-c", "npx serverless remove -v"
}

group = "com.serverless.corecomponent"
version = "0.1"

apply plugin: "io.spring.dependency-management"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "java"
apply plugin: "application"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

application {
    mainClassName = "io.micronaut.function.executor.FunctionApplication"
}

dependencyManagement {
    imports {
        mavenBom "io.micronaut:micronaut-bom:1.1.3"
    }
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java" 
    annotationProcessor "org.projectlombok:lombok:1.18.8"

    compileOnly "org.projectlombok:lombok:1.18.8"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut.aws:micronaut-function-aws-api-proxy"
    compile "io.micronaut:micronaut-http-server-netty"
    runtime "org.apache.logging.log4j:log4j-core:2.8.2"
    runtime "org.apache.logging.log4j:log4j-api:2.8.2"
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:2.8.2"
    runtime "com.amazonaws:aws-lambda-java-log4j2:1.1.0"
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add("-parameters")
}

shadowJar {
    mergeServiceFiles()
}

shadowJar {
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}


configurations {
    developmentOnly
}

run.classpath += configurations.developmentOnly
run.jvmArgs("-noverify", "-XX:TieredStopAtLevel=1", "-Dcom.sun.management.jmxremote")
mainClassName = "com.serverless.corecomponent.Application"
applicationDefaultJvmArgs = [""]

jar {
    manifest {
        attributes "Main-Class": mainClassName
    }
}